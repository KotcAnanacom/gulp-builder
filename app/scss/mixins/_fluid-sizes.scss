/* stylelint-disable at-rule-empty-line-before */
@use 'sass:math';
@use '../base' as *;

// выставить максимальную и минимальную ширину для корректной работы

@function fluid-text($max: 48, $min: 16) {
  $maxViewportWidth: $width-web;
  $minViewportWidth: $width-min-web;
  $maxSize: math.div($max, 16);
  $minSize: math.div($min, 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);
  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minSize;
  @return clamp(#{$minSize * 1rem},
    #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
    #{$maxSize * 1rem});
}


@function fluid-block($max-block: 500, $min-block: 300, $max-vw: $width-web, $min-vw: $width-min-web) {
  $block: $max-block - $min-block;
  $viewport: $max-vw - $min-vw;
  @return clamp(#{$min-block}px, calc(#{$min-block}px + #{$block} * (100vw - #{$min-vw}px) / #{$viewport}), #{$max-block}px);
}

@function vw($px, $base: $width-web) {
  @return math.div($px, $base) * 100vw;
}

@function vh($px, $base: $height-web) {
  @return math.div($px, $base) * 100vh;
}

@function rem($px, $base: 16) {
  @return math.div($px, $base) * 1rem;
}

@function em($px, $base: 16) {
  @return math.div($px, $base) * 1em;
}
